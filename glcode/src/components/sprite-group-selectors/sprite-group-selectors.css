@import "../../css/colors.css";
@import "../../css/units.css";
@import "../../css/z-index.css";

.sprite-group {
    background: $motion-btn;
    margin-bottom: 16px;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    border-radius: 4px;
    padding-bottom: 8px;
}

.folder-color {
    fill: '#ffffff';
}

.group-header {
    height: 32px;
    background: $motion-primary;
    border-radius: 4px;
    margin-top: 8px;
    width: 156px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    padding: 0 10px;
    color: #ffffff;
}

.group-header-placeholder {
    height: 8px;
    width: 100%;

}

.group-header-icon-container {
    display: flex;
}

.group-header-icon {
    margin-right: 9.5px;
}

.group-header-text {
    flex: 1;
    text-overflow: ellipsis;
    width: 103px;
    white-space: nowrap;
    overflow: hidden;
    user-select: none;
}

.group-header-input {
    width: 103px;
    overflow: hidden;
    display: flex;
}

.group-sprite-list {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    width: 180px;
}

.sprite-selector {
    flex-grow: 1;
    position: relative;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;

    background-color: $ui-secondary;
    /* border-top-right-radius: $space;
    border-top-left-radius: $space;
    border-color: $ui-black-transparent;
    border-width: 1px;
    border-style: solid;
    border-bottom: 0; */
    height: calc(100% - 169px);
    overflow-y: auto;
    overflow-x: hidden;
}

.sprite-wrapper {
    /*
        Our goal is to fit sprites evenly in a row without leftover space.
        Flexbox's `space between` property gets us close, but doesn't flow
        well when the # of items per row > 1 and less than the max per row.

        Solving by explicitly calc'ing the width of each sprite. Setting
        `border-box` simplifies things, because content, padding and
        border-width all are included in the width, leaving us only to subtract
        the left + right margins.

        @todo: make room for the scrollbar
    */
    box-sizing: border-box;
    /* width: calc((100% / $sprites-per-row ) - $space); */
    max-width: 156px;
    min-width: 116px;
    min-height: 84px;
    /* @todo: calc height same as width */
    margin-bottom: 16px;
    position: relative;
}

.sprite {
    height: 100%;
}


.scroll-wrapper {
    /*
       Sets the sprite-selector items as a scrollable pane

        @todo: Safari: pane doesn't stretch to fill height;
        @todo: Adding `position: relative` still doesn't fix Safari scrolling pane, and
              also introduces a new bug in Chrome when vertically resizing window down,
              then back up, introduces white space in the outside the page container.
    */
    /* height: calc(100% - $sprite-info-height);
    overflow-y: auto; */
}

.scroll-wrapper-dragging {
    background-color: $drop-highlight;
}

.items-wrapper {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: center;
}

.add-button {
    position: absolute !important;
    bottom: 0.75rem;
    top: 0;
    height: 500px;
    z-index: 99999999;
}

[dir="ltr"] .add-button {
    right: 1rem;
}

[dir="rtl"] .add-button {
    left: 1rem;
}

.raised {
    background-color: $drop-highlight;
    transition: all 0.25s ease;
}

.raised:hover {
    background-color: $drop-highlight;
    transform: scale(1.05);
}

.raised:hover {
    animation-name: wiggle;
    animation-duration: 500ms;
    animation-iteration-count: 1;
    animation-timing-function: ease-in-out;
    background-color: $drop-highlight;
}

@keyframes wiggle {
    0% {
        transform: rotate(3deg) scale(1.05);
    }

    25% {
        transform: rotate(-3deg) scale(1.05);
    }

    50% {
        transform: rotate(5deg) scale(1.05);
    }

    75% {
        transform: rotate(-2deg) scale(1.05);
    }

    100% {
        transform: rotate(0deg) scale(1.05);
    }
}

.receivedBlocks {
    animation: glowing 250ms;
}

@keyframes glowing {
    10% {
        box-shadow: 0 0 10px #7fff1e;
    }

    90% {
        box-shadow: 0 0 10px #7fff1e;
    }

    100% {
        box-shadow: none;
    }
}

.placeholder>.sprite {
    background: black;
    filter: opacity(15%) brightness(0%);
}

#targetPanes {
    display: none;
}

.other-part {
    order: 999999;
    width: 180px;
    height: 600px;
}

.other-up {
    width: 180px;
    height: 20px;
    position: absolute;
    z-index: 999;
    top: -20px;
    left: 0;
}